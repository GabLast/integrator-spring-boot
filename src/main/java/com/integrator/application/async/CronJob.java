package com.integrator.application.async;

import com.integrator.application.models.module.TestData;
import com.integrator.application.models.module.TestType;
import com.integrator.application.services.module.TestDataService;
import com.integrator.application.services.module.TestTypeService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

@Component
@RequiredArgsConstructor
@Slf4j
public class CronJob {

    private final TestDataService testDataService;
    private final TestTypeService testTypeService;

    //60 = X = minutes
    @Scheduled(fixedDelay = 60 * 1000 * 60) // every X minutes
    public void generateRandomTestData() throws InterruptedException {
        log.info("Executing Cron Job: generateRandomTestData");
        TestType any = testTypeService.findAllByEnabled(true).stream().findFirst().orElse(null);
        if(any == null) {
            return;
        }
        Long MAX = 1000L;
        Long MIN = 1L;

        int randomNum = Math.toIntExact((int) (Math.random() * (MAX - MIN + 1)) + MIN);

        TestData value = TestData.builder()
                .word("Cron Job Generated Value: " + UUID.randomUUID())
                .testType(any)
                .date(LocalDateTime.now())
                .number(BigDecimal.valueOf(randomNum))
                .description("This value was generated by a cron job")
                .build();

        testDataService.saveTestData(value);
    }
}
