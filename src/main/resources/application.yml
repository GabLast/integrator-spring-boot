spring:
  application:
    name:
      integrator-spring-boot
  profiles:
    active: dev
  batch:
    job:
      enabled: false #Whether to execute a Spring Batch job on startup.
    jdbc:
      initialize-schema: always
  task:
    scheduling:
      pool:
        size: 20
  graphql:
    http:
      path: /graphql
    schema:
      file-extensions: .graphqls
      locations: classpath:graphql/**/
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset: earliest
    #    listener:
#      concurrency: 1
#      type: single
    admin:
      fail-fast: true
      auto-create: true
    #    producer:
    #      bootstrap-servers: localhost:9092
    #      client-id: producer-test-data
    #      key-serializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-serializer: org.apache.kafka.common.serialization.StringDeserializer
#    consumer:
#      bootstrap-servers: localhost:9092
#      group-id: consumer-test-data
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer #org.apache.kafka.common.serialization.Deserializer? com.acme.CustomDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

server:
  port: ${PORT:8080}

#App info
app:
  name: @project.name@
  version: @project.version@
  secrets:
    key: ${JWT:JNN324KUJN23UN4UI231H798N798CN987N198N908N8DN8}

r2dbc:
  database: r2dbc:h2:file:./data/reactive
  username: sa
  password:
  port: 0
  driver: h2

